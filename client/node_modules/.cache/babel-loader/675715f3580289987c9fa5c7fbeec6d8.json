{"ast":null,"code":"import _defineProperty from\"/home/frboy/whyshop/cliend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/frboy/whyshop/cliend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/frboy/whyshop/cliend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import Axios from'../Axios';export var fetchUser=createAsyncThunk('user/fetchUser',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get('/authentication').then(function(res){return res.data;});case 2:response=_context.sent;return _context.abrupt(\"return\",response);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export var userSlice=createSlice({name:'user',initialState:{userInfo:{name:'',number:''},error:'',loading:false,isAthu:false},reducers:{login:function login(state,action){state.userInfo=action.payload;}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,fetchUser.fulfilled,function(state,action){state.userInfo=action.payload.UserInfo;}),_defineProperty(_extraReducers,fetchUser.pending,function(state,action){state.loading=true;}),_defineProperty(_extraReducers,fetchUser.rejected,function(state,action){state.error=action.error;state.loading=false;}),_extraReducers)});var login=userSlice.actions.login;export{login};export default userSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Features/User.js"],"names":["createSlice","createAsyncThunk","Axios","fetchUser","userId","get","then","res","data","response","userSlice","name","initialState","userInfo","number","error","loading","isAthu","reducers","login","state","action","payload","extraReducers","fulfilled","UserInfo","pending","rejected","actions","reducer"],"mappings":"qcAAA,OAASA,WAAT,CAAqBC,gBAArB,KAA6C,kBAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAGA,MAAO,IAAMC,CAAAA,SAAS,CAAGF,gBAAgB,CAAC,gBAAD,0FAAmB,iBAAOG,MAAP,qJACjCF,CAAAA,KAAK,CAACG,GAAN,CAAU,iBAAV,EAA6BC,IAA7B,CAAkC,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAN,EAArC,CADiC,QAClDC,QADkD,+CAEjDA,QAFiD,wDAAnB,+DAAlC,CAKP,MAAO,IAAOC,CAAAA,SAAS,CAAGV,WAAW,CAAC,CAClCW,IAAI,CAAE,MAD4B,CAElCC,YAAY,CAAE,CACVC,QAAQ,CAAE,CACNF,IAAI,CAAE,EADA,CAENG,MAAM,CAAE,EAFF,CADA,CAKVC,KAAK,CAAE,EALG,CAMVC,OAAO,CAAE,KANC,CAOVC,MAAM,CAAC,KAPG,CAFoB,CAWlCC,QAAQ,CAAE,CACNC,KAAK,CAAE,eAACC,KAAD,CAAQC,MAAR,CAAmB,CACtBD,KAAK,CAACP,QAAN,CAAiBQ,MAAM,CAACC,OAAxB,CAEH,CAJK,CAXwB,CAgB/BC,aAAa,mDACXpB,SAAS,CAACqB,SADC,CACW,SAACJ,KAAD,CAAQC,MAAR,CAAmB,CACtCD,KAAK,CAACP,QAAN,CAAiBQ,MAAM,CAACC,OAAP,CAAeG,QAAhC,CACH,CAHW,iCAIXtB,SAAS,CAACuB,OAJC,CAIS,SAACN,KAAD,CAAQC,MAAR,CAAmB,CACpCD,KAAK,CAACJ,OAAN,CAAe,IAAf,CAEH,CAPW,iCAQXb,SAAS,CAACwB,QARC,CAQU,SAACP,KAAD,CAAQC,MAAR,CAAmB,CACrCD,KAAK,CAACL,KAAN,CAAcM,MAAM,CAACN,KAArB,CACAK,KAAK,CAACJ,OAAN,CAAgB,KAAhB,CACH,CAXW,iBAhBkB,CAAD,CAA9B,C,GA+BOG,CAAAA,K,CAAST,SAAS,CAACkB,O,CAAnBT,K,eAEd,cAAeT,CAAAA,SAAS,CAACmB,OAAzB","sourcesContent":["import { createSlice,createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\n\nexport const fetchUser = createAsyncThunk('user/fetchUser', async (userId) => {\n    const response = await Axios.get('/authentication').then(res=>res.data)\n    return response\n})\n\nexport const  userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        userInfo: {\n            name: '',\n            number: '',\n        },\n        error: '',\n        loading: false,\n        isAthu:false,\n    },\n    reducers: {\n        login: (state, action) => {\n            state.userInfo = action.payload;\n\n        }\n    }, extraReducers: {\n        [fetchUser.fulfilled]: (state, action) => {\n            state.userInfo = action.payload.UserInfo;\n        },\n        [fetchUser.pending]: (state, action) => {\n            state.loading= true;\n            \n        },\n        [fetchUser.rejected]: (state, action) => {\n            state.error = action.error;\n            state.loading = false;\n        }\n    }\n})\n\nexport const {login} = userSlice.actions;\n\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}