{"ast":null,"code":"import axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { login } from './Features/User';\nconst baseURL = 'http://localhost:4000/';\nexport const ImagePath = imageId => `${baseURL}images/${imageId}.jpg`;\n_c = ImagePath;\nconst instance = axios.create({\n  baseURL: 'http://localhost:4000/api/',\n  headers: {\n    'authorization': localStorage.getItem('accesstoken')\n  },\n  withCredentials: true\n});\ninstance.interceptors.response.use(response => response, async error => {\n  console.log(error.response.status);\n\n  if (error.response.status === 401) {\n    try {\n      localStorage.removeItem('accesstoken');\n      const {\n        data\n      } = await instance.put('/auth/refreshtoken', {\n        withCredentials: true\n      });\n      localStorage.setItem('accesstoken', data.accesstoken);\n    } catch (_error) {\n      return Promise.reject(error);\n    }\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePath\");","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Axios.js"],"names":["axios","useDispatch","login","baseURL","ImagePath","imageId","instance","create","headers","localStorage","getItem","withCredentials","interceptors","response","use","error","console","log","status","removeItem","data","put","setItem","accesstoken","_error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAGA,MAAMC,OAAO,GAAG,wBAAhB;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAc,GAAEF,OAAQ,UAASE,OAAQ,MAA3D;KAAMD,S;AAEb,MAAME,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC1BJ,EAAAA,OAAO,EAAE,4BADiB;AAE1BK,EAAAA,OAAO,EAAE;AACL,qBAAiBC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADZ,GAFiB;AAK1BC,EAAAA,eAAe,EAAE;AALS,CAAb,CAAjB;AAQAL,QAAQ,CAACM,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACID,QAAQ,IAAIA,QADhB,EAEI,MAAME,KAAN,IAAe;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAN,CAAeK,MAA3B;;AACA,MAAIH,KAAK,CAACF,QAAN,CAAeK,MAAf,KAA0B,GAA9B,EAAmC;AAC/B,QAAI;AACAT,MAAAA,YAAY,CAACU,UAAb,CAAwB,aAAxB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMd,QAAQ,CAACe,GAAT,CAAa,oBAAb,EAAmC;AAAEV,QAAAA,eAAe,EAAE;AAAnB,OAAnC,CAAvB;AACAF,MAAAA,YAAY,CAACa,OAAb,CAAqB,aAArB,EAAoCF,IAAI,CAACG,WAAzC;AACH,KAJD,CAIE,OAAOC,MAAP,EAAe;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeX,KAAf,CAAP;AACH;AACJ;;AACD,SAAOU,OAAO,CAACC,MAAR,CAAeX,KAAf,CAAP;AACH,CAdL;AAmBA,eAAeT,QAAf","sourcesContent":["import axios from 'axios';\nimport { useDispatch } from 'react-redux'\nimport { login } from './Features/User'\n\n\nconst baseURL = 'http://localhost:4000/';\n\nexport const ImagePath = (imageId) => `${baseURL}images/${imageId}.jpg`;\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:4000/api/',\n    headers: {\n        'authorization': localStorage.getItem('accesstoken'),\n    },\n    withCredentials: true\n   \n});\ninstance.interceptors.response.use(\n    response => response,\n    async error => {\n        console.log(error.response.status)\n        if (error.response.status === 401) {\n            try {\n                localStorage.removeItem('accesstoken');\n                const { data } = await instance.put('/auth/refreshtoken', { withCredentials: true })\n                localStorage.setItem('accesstoken', data.accesstoken)\n            } catch (_error) {\n                return Promise.reject(error)\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n\n\nexport default instance"]},"metadata":{},"sourceType":"module"}