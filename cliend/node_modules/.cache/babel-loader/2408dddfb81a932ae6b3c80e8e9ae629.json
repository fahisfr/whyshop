{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport Axios from '../Axios';\nexport const fetchUser = createAsyncThunk('user/fetchUser', async userId => {\n  const response = await Axios.get('/authentication').then(res => res.data);\n  return response;\n});\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userInfo: {\n      name: '',\n      number: '',\n      isAuth: false\n    }\n  },\n  reducers: {\n    login: (state, action) => {\n      state.userInfo = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchUser.fulfilled]: (state, action) => {\n      if (action.payload.status) {\n        let user = state.userInfo;\n        user.name = action.payload.name;\n        user.number = action.payload.number;\n        user.isAuth = action.payload.status;\n      } else {\n        co;\n      } // state.userInfo = action.payload;\n\n\n      console.log(action.payload);\n      console.log(state.userInfo);\n    }\n  }\n});\nexport const {\n  login\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Features/User.js"],"names":["createSlice","createAsyncThunk","Axios","fetchUser","userId","response","get","then","res","data","userSlice","name","initialState","userInfo","number","isAuth","reducers","login","state","action","payload","extraReducers","fulfilled","status","user","co","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAGA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,gBAAD,EAAmB,MAAOG,MAAP,IAAkB;AAC1E,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,iBAAV,EAA6BC,IAA7B,CAAkCC,GAAG,IAAEA,GAAG,CAACC,IAA3C,CAAvB;AACA,SAAOJ,QAAP;AACH,CAHwC,CAAlC;AAKP,OAAO,MAAOK,SAAS,GAAGV,WAAW,CAAC;AAClCW,EAAAA,IAAI,EAAE,MAD4B;AAElCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE;AACNF,MAAAA,IAAI,EAAE,EADA;AAENG,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,MAAM,EAAE;AAHF;AADA,GAFoB;AASlCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtBD,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACH;AAHK,GATwB;AAa/BC,EAAAA,aAAa,EAAE;AACd,KAAClB,SAAS,CAACmB,SAAX,GAAuB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAIA,MAAM,CAACC,OAAP,CAAeG,MAAnB,EAA2B;AACvB,YAAIC,IAAI,GAACN,KAAK,CAACL,QAAf;AACAW,QAAAA,IAAI,CAACb,IAAL,GAAYQ,MAAM,CAACC,OAAP,CAAeT,IAA3B;AACAa,QAAAA,IAAI,CAACV,MAAL,GAAcK,MAAM,CAACC,OAAP,CAAeN,MAA7B;AACAU,QAAAA,IAAI,CAACT,MAAL,GAAYI,MAAM,CAACC,OAAP,CAAeG,MAA3B;AACH,OALD,MAKO;AACHE,QAAAA,EAAE;AACL,OARqC,CAStC;;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACC,OAAnB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACL,QAAlB;AAEH;AAda;AAbgB,CAAD,CAA9B;AA+BP,OAAO,MAAM;AAACI,EAAAA;AAAD,IAAUP,SAAS,CAACkB,OAA1B;AAEP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import { createSlice,createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\n\nexport const fetchUser = createAsyncThunk('user/fetchUser', async (userId) => {\n    const response = await Axios.get('/authentication').then(res=>res.data)\n    return response\n})\n\nexport const  userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        userInfo: {\n            name: '',\n            number: '',\n            isAuth: false,\n        },\n    },\n    reducers: {\n        login: (state, action) => {\n            state.userInfo = action.payload;\n        }\n    }, extraReducers: {\n        [fetchUser.fulfilled]: (state, action) => {\n            if (action.payload.status) {\n                let user=state.userInfo\n                user.name = action.payload.name\n                user.number = action.payload.number\n                user.isAuth=action.payload.status\n            } else {\n                co\n            }\n            // state.userInfo = action.payload;\n            console.log(action.payload)\n            console.log(state.userInfo)\n            \n        }\n    }\n})\n\nexport const {login} = userSlice.actions;\n\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}