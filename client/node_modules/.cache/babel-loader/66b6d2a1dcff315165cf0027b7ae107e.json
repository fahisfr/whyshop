{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport Axios from '../Axios';\nexport const fetchOrder = createAsyncThunk('Order/fetchCart', async () => {\n  const response = await Axios.get('/order').then(res => res.data.order);\n  return response;\n});\nexport const OrderSlice = createSlice({\n  name: 'order',\n  initialState: {\n    paymentType: '',\n    paymentStatus: '',\n    products: [],\n    address: [],\n    total: 0,\n    orderAt: ''\n  },\n  reducers: {\n    addToCart: (state, action) => {}\n  },\n  extraReducers: {\n    [fetchOrder.fulfilled]: (state, action) => {}\n  }\n});\nexport default OrderSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Features/Order.js"],"names":["createSlice","createAsyncThunk","Axios","fetchOrder","response","get","then","res","data","order","OrderSlice","name","initialState","paymentType","paymentStatus","products","address","total","orderAt","reducers","addToCart","state","action","extraReducers","fulfilled","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAIA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AACtE,QAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,QAAV,EAAoBC,IAApB,CAAyBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,KAAzC,CAAvB;AACA,SAAOL,QAAP;AACH,CAHyC,CAAnC;AAIP,OAAO,MAAMM,UAAU,GAAGV,WAAW,CAAC;AAClCW,EAAAA,IAAI,EAAE,OAD4B;AAElCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE,EADH;AAEVC,IAAAA,aAAa,EAAE,EAFL;AAGVC,IAAAA,QAAQ,EAAE,EAHA;AAIVC,IAAAA,OAAO,EAAE,EAJC;AAKVC,IAAAA,KAAK,EAAC,CALI;AAMVC,IAAAA,OAAO,EAAC;AANE,GAFoB;AAUlCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAC7B;AAFK,GAVwB;AAclCC,EAAAA,aAAa,EAAE;AACX,KAACpB,UAAU,CAACqB,SAAZ,GAAwB,CAACH,KAAD,EAAQC,MAAR,KAAmB,CAE1C;AAHU;AAdmB,CAAD,CAA9B;AAoBP,eAAeZ,UAAU,CAACe,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\n\n\nexport const fetchOrder = createAsyncThunk('Order/fetchCart', async () => {\n    const response = await Axios.get('/order').then(res => res.data.order)\n    return response\n})\nexport const OrderSlice = createSlice({\n    name: 'order',\n    initialState: {\n        paymentType: '',\n        paymentStatus: '',\n        products: [],\n        address: [],\n        total:0,\n        orderAt:'',\n    },\n    reducers: {\n        addToCart: (state, action) => {\n        }\n    },\n    extraReducers: {\n        [fetchOrder.fulfilled]: (state, action) => {\n            \n        }\n    }\n})\nexport default OrderSlice.reducer;"]},"metadata":{},"sourceType":"module"}