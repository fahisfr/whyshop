{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'https://frbots.com/';\nexport const ImagePath = imageId => `${baseURL}images/${imageId}.jpg`;\n_c = ImagePath;\nconst instance = axios.create({\n  baseURL: 'https://frbots.com/api',\n  headers: {\n    'authorization': localStorage.getItem('accesstoken')\n  }\n});\naxios.interceptors.response.use(response => {}, error => {\n  console.log(error.response.data.message);\n\n  if (error.response.status === 401) {\n    console.log('401');\n    localStorage.removeItem('accesstoken');\n    window.location.reload();\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePath\");","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Axios.js"],"names":["axios","baseURL","ImagePath","imageId","instance","create","headers","localStorage","getItem","interceptors","response","use","error","console","log","data","message","status","removeItem","window","location","reload","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,OAAO,GAAG,qBAAhB;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAc,GAAEF,OAAQ,UAASE,OAAQ,MAA3D;KAAMD,S;AAEb,MAAME,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BJ,EAAAA,OAAO,EAAE,wBADiB;AAE1BK,EAAAA,OAAO,EAAE;AAAE,qBAAiBC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAnB;AAFiB,CAAb,CAAjB;AAKAR,KAAK,CAACS,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACID,QAAQ,IAAI,CAEX,CAHL,EAIIE,KAAK,IAAI;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAN,CAAeK,IAAf,CAAoBC,OAAhC;;AACA,MAAIJ,KAAK,CAACF,QAAN,CAAeO,MAAf,KAA0B,GAA9B,EAAmC;AAC/BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAP,IAAAA,YAAY,CAACW,UAAb,CAAwB,aAAxB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeX,KAAf,CAAP;AACH,CAZL;AAgBA,eAAeR,QAAf","sourcesContent":["import axios from 'axios';\n\n\nconst baseURL = 'https://frbots.com/';\n\nexport const ImagePath = (imageId) => `${baseURL}images/${imageId}.jpg`;\n\nconst instance = axios.create({\n    baseURL: 'https://frbots.com/api',\n    headers: { 'authorization': localStorage.getItem('accesstoken') }\n});\n\naxios.interceptors.response.use(\n    response => {\n        \n    },\n    error => {\n        console.log(error.response.data.message);\n        if (error.response.status === 401) {\n            console.log('401');\n            localStorage.removeItem('accesstoken');\n            window.location.reload();\n        }\n        return Promise.reject(error);\n    }\n);\n\n\nexport default instance"]},"metadata":{},"sourceType":"module"}