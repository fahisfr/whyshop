{"ast":null,"code":"import _defineProperty from\"/home/frboy/whyshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/frboy/whyshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/frboy/whyshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import Axios from'../Axios';export var fetchCart=createAsyncThunk('cart/fetchCart',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get('/cart').then(function(res){return res.data;});case 2:response=_context.sent;return _context.abrupt(\"return\",response);case 4:case\"end\":return _context.stop();}}},_callee);})));export var CartSlice=createSlice({name:'cart',initialState:{cartInfo:[],error:'',total:0},reducers:{addToCart:function addToCart(state,action){state.cartInfo.push(action.payload);},changeProductQuantity:function changeProductQuantity(state,action){action.payload.quantity===.5?state.total+=action.payload.price:state.total-=action.payload.price;state.cartInfo.find(function(itme){return itme._id===action.payload.id;}).quantity+=action.payload.quantity;},removeFromCart:function removeFromCart(state,action){state.cartInfo=state.cartInfo.filter(function(item){return item._id!==action.payload;});},removeAllProducts:function removeAllProducts(state,action){state.cartInfo=[];}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,fetchCart.pending,function(state,action){state.loading=true;}),_defineProperty(_extraReducers,fetchCart.fulfilled,function(state,action){state.cartInfo=action.payload.cart;state.total=action.payload.totalamout;state.totle=action.payload.totleamout;state.loading=false;}),_defineProperty(_extraReducers,fetchCart.rejected,function(state,action){state.error=action.error;state.loading=false;}),_extraReducers)});var _CartSlice$actions=CartSlice.actions,addToCart=_CartSlice$actions.addToCart,changeProductQuantity=_CartSlice$actions.changeProductQuantity,removeFromCart=_CartSlice$actions.removeFromCart,removeAllProducts=_CartSlice$actions.removeAllProducts,Checkout=_CartSlice$actions.Checkout;export{addToCart,changeProductQuantity,removeFromCart,removeAllProducts,Checkout};export default CartSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/client/src/Features/Cart.js"],"names":["createSlice","createAsyncThunk","Axios","fetchCart","get","then","res","data","response","CartSlice","name","initialState","cartInfo","error","total","reducers","addToCart","state","action","push","payload","changeProductQuantity","quantity","price","find","itme","_id","id","removeFromCart","filter","item","removeAllProducts","extraReducers","pending","loading","fulfilled","cart","totalamout","totle","totleamout","rejected","actions","Checkout","reducer"],"mappings":"qcAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAIA,MAAO,IAAMC,CAAAA,SAAS,CAAGF,gBAAgB,CAAC,gBAAD,sEAAmB,sKACjCC,CAAAA,KAAK,CAACE,GAAN,CAAU,OAAV,EAAmBC,IAAnB,CAAwB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAR,EAA3B,CADiC,QAClDC,QADkD,+CAEjDA,QAFiD,wDAAnB,GAAlC,CAKP,MAAO,IAAMC,CAAAA,SAAS,CAAGT,WAAW,CAAC,CACjCU,IAAI,CAAE,MAD2B,CAEjCC,YAAY,CAAE,CACVC,QAAQ,CAAE,EADA,CAEVC,KAAK,CAAE,EAFG,CAGVC,KAAK,CAAE,CAHG,CAFmB,CAOjCC,QAAQ,CAAE,CACNC,SAAS,CAAE,mBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1BD,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B,EACH,CAHK,CAINC,qBAAqB,CAAE,+BAACJ,KAAD,CAAQC,MAAR,CAAmB,CACtCA,MAAM,CAACE,OAAP,CAAeE,QAAf,GAA4B,EAA5B,CAAiCL,KAAK,CAACH,KAAN,EAAeI,MAAM,CAACE,OAAP,CAAeG,KAA/D,CAAuEN,KAAK,CAACH,KAAN,EAAeI,MAAM,CAACE,OAAP,CAAeG,KAArG,CACAN,KAAK,CAACL,QAAN,CAAeY,IAAf,CAAoB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaR,MAAM,CAACE,OAAP,CAAeO,EAAhC,EAAxB,EAA4DL,QAA5D,EAAwEJ,MAAM,CAACE,OAAP,CAAeE,QAAvF,CACH,CAPK,CAQNM,cAAc,CAAE,wBAACX,KAAD,CAAQC,MAAR,CAAmB,CAC/BD,KAAK,CAACL,QAAN,CAAiBK,KAAK,CAACL,QAAN,CAAeiB,MAAf,CAAsB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACJ,GAAL,GAAaR,MAAM,CAACE,OAAxB,EAA1B,CAAjB,CACH,CAVK,CAWNW,iBAAiB,CAAE,2BAACd,KAAD,CAAQC,MAAR,CAAmB,CAClCD,KAAK,CAACL,QAAN,CAAiB,EAAjB,CACH,CAbK,CAPuB,CAsBjCoB,aAAa,mDACR7B,SAAS,CAAC8B,OADF,CACY,SAAChB,KAAD,CAAQC,MAAR,CAAmB,CACpCD,KAAK,CAACiB,OAAN,CAAgB,IAAhB,CACH,CAHQ,iCAKR/B,SAAS,CAACgC,SALF,CAKc,SAAClB,KAAD,CAAQC,MAAR,CAAmB,CACtCD,KAAK,CAACL,QAAN,CAAiBM,MAAM,CAACE,OAAP,CAAegB,IAAhC,CAEAnB,KAAK,CAACH,KAAN,CAAcI,MAAM,CAACE,OAAP,CAAeiB,UAA7B,CACApB,KAAK,CAACqB,KAAN,CAAcpB,MAAM,CAACE,OAAP,CAAemB,UAA7B,CACAtB,KAAK,CAACiB,OAAN,CAAgB,KAAhB,CACH,CAXQ,iCAaR/B,SAAS,CAACqC,QAbF,CAaa,SAACvB,KAAD,CAAQC,MAAR,CAAmB,CACrCD,KAAK,CAACJ,KAAN,CAAcK,MAAM,CAACL,KAArB,CACAI,KAAK,CAACiB,OAAN,CAAgB,KAAhB,CACH,CAhBQ,iBAtBoB,CAAD,CAA7B,C,uBAyCyFzB,SAAS,CAACgC,O,CAA3FzB,S,oBAAAA,S,CAAWK,qB,oBAAAA,qB,CAAuBO,c,oBAAAA,c,CAAgBG,iB,oBAAAA,iB,CAAkBW,Q,oBAAAA,Q,mFACnF,cAAejC,CAAAA,SAAS,CAACkC,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\n\n\nexport const fetchCart = createAsyncThunk('cart/fetchCart', async () => {\n    const response = await Axios.get('/cart').then(res => res.data)\n    return response\n}\n)\nexport const CartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        cartInfo: [],\n        error: '',\n        total: 0,\n    },\n    reducers: {\n        addToCart: (state, action) => {\n            state.cartInfo.push(action.payload)\n        },\n        changeProductQuantity: (state, action) => {\n            action.payload.quantity === .5 ? state.total += action.payload.price : state.total -= action.payload.price\n            state.cartInfo.find(itme => itme._id === action.payload.id).quantity += action.payload.quantity\n        },\n        removeFromCart: (state, action) => {\n            state.cartInfo = state.cartInfo.filter(item => item._id !== action.payload)\n        },\n        removeAllProducts: (state, action) => {\n            state.cartInfo = []\n        },\n    },\n    extraReducers: {\n        [fetchCart.pending]: (state, action) => {\n            state.loading = true\n        }\n        ,\n        [fetchCart.fulfilled]: (state, action) => {\n            state.cartInfo = action.payload.cart\n            \n            state.total = action.payload.totalamout\n            state.totle = action.payload.totleamout\n            state.loading = false\n        }\n        ,\n        [fetchCart.rejected]: (state, action) => {\n            state.error = action.error\n            state.loading = false\n        }\n    }\n})\nexport const { addToCart, changeProductQuantity, removeFromCart, removeAllProducts,Checkout } = CartSlice.actions;\nexport default CartSlice.reducer;"]},"metadata":{},"sourceType":"module"}