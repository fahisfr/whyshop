{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport Axios from '../Axios';\nexport const fetchOrder = createAsyncThunk('Order/fetchCart', async () => {\n  const response = await Axios.get('/order').then(res => res.data);\n  return response;\n});\nexport const OrderSlice = createSlice({\n  name: 'order',\n  initialState: {\n    OrderInfo: [{\n      userID: \"asfa342314\",\n      OrderAt: \"12-31-2003 time 3:34\",\n      paymentType: \"COD\",\n      paymentStatus: \"pending\",\n      products: [{\n        name: \"apple\",\n        price: 300,\n        quantity: 3,\n        imageId: \"apple1641320065790\",\n        total: 900\n      }, {\n        name: \"ornage\",\n        price: 100,\n        quantity: 5,\n        imageid: \"orange1641323221621\",\n        total: 500\n      }],\n      address: {\n        name: \"fahisAdmin\",\n        number: 1234567890,\n        city: \"vengara\",\n        ladmark: \"main road\"\n      },\n      totalPrice: 800,\n      paymentID: \"aljseoiasjfieu930\",\n      OrderStatus: \"Picking\"\n    }],\n    error: '',\n    loding: false\n  },\n  extraReducers: {\n    [fetchOrder.fulfilled]: (state, action) => {\n      state.loding = false;\n      state.OrderInfo = action.payload.order;\n    },\n    [fetchOrder.pending]: (state, action) => {\n      state.loding = true;\n    },\n    [fetchOrder.rejected]: (state, action) => {\n      state.error = action.error;\n      state.loding = false;\n    }\n  }\n});\nexport default OrderSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/client/src/Features/Order.js"],"names":["createSlice","createAsyncThunk","Axios","fetchOrder","response","get","then","res","data","OrderSlice","name","initialState","OrderInfo","userID","OrderAt","paymentType","paymentStatus","products","price","quantity","imageId","total","imageid","address","number","city","ladmark","totalPrice","paymentID","OrderStatus","error","loding","extraReducers","fulfilled","state","action","payload","order","pending","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAIA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AACtE,QAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,QAAV,EAAoBC,IAApB,CAAyBC,GAAG,IAAIA,GAAG,CAACC,IAApC,CAAvB;AACA,SAAOJ,QAAP;AACH,CAHyC,CAAnC;AAIP,OAAO,MAAMK,UAAU,GAAGT,WAAW,CAAC;AAClCU,EAAAA,IAAI,EAAE,OAD4B;AAElCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,CACP;AACIC,MAAAA,MAAM,EAAE,YADZ;AAEIC,MAAAA,OAAO,EAAE,sBAFb;AAGIC,MAAAA,WAAW,EAAE,KAHjB;AAIIC,MAAAA,aAAa,EAAE,SAJnB;AAKIC,MAAAA,QAAQ,EAAE,CACN;AACIP,QAAAA,IAAI,EAAE,OADV;AAEIQ,QAAAA,KAAK,EAAE,GAFX;AAGIC,QAAAA,QAAQ,EAAE,CAHd;AAIIC,QAAAA,OAAO,EAAE,oBAJb;AAKIC,QAAAA,KAAK,EAAE;AALX,OADM,EAQN;AACIX,QAAAA,IAAI,EAAE,QADV;AAEIQ,QAAAA,KAAK,EAAE,GAFX;AAGIC,QAAAA,QAAQ,EAAE,CAHd;AAIIG,QAAAA,OAAO,EAAE,qBAJb;AAKID,QAAAA,KAAK,EAAE;AALX,OARM,CALd;AAsBIE,MAAAA,OAAO,EAAE;AACLb,QAAAA,IAAI,EAAE,YADD;AAELc,QAAAA,MAAM,EAAE,UAFH;AAGLC,QAAAA,IAAI,EAAE,SAHD;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAtBb;AA6BIC,MAAAA,UAAU,EAAE,GA7BhB;AA8BIC,MAAAA,SAAS,EAAE,mBA9Bf;AA+BIC,MAAAA,WAAW,EAAE;AA/BjB,KADO,CADD;AAqCVC,IAAAA,KAAK,EAAE,EArCG;AAsCVC,IAAAA,MAAM,EAAE;AAtCE,GAFoB;AA0ClCC,EAAAA,aAAa,EAAE;AACX,KAAC7B,UAAU,CAAC8B,SAAZ,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACH,MAAN,GAAe,KAAf;AACAG,MAAAA,KAAK,CAACtB,SAAN,GAAkBuB,MAAM,CAACC,OAAP,CAAeC,KAAjC;AAEH,KALU;AAMX,KAAClC,UAAU,CAACmC,OAAZ,GAAsB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACH,MAAN,GAAe,IAAf;AAEH,KATU;AAUX,KAAC5B,UAAU,CAACoC,QAAZ,GAAuB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACL,KAArB;AACAI,MAAAA,KAAK,CAACH,MAAN,GAAe,KAAf;AAEH;AAdU;AA1CmB,CAAD,CAA9B;AA4DP,eAAetB,UAAU,CAAC+B,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\n\n\nexport const fetchOrder = createAsyncThunk('Order/fetchCart', async () => {\n    const response = await Axios.get('/order').then(res => res.data)\n    return response\n})\nexport const OrderSlice = createSlice({\n    name: 'order',\n    initialState: {\n        OrderInfo: [\n            {\n                userID: \"asfa342314\",\n                OrderAt: \"12-31-2003 time 3:34\",\n                paymentType: \"COD\",\n                paymentStatus: \"pending\",\n                products: [\n                    {\n                        name: \"apple\",\n                        price: 300,\n                        quantity: 3,\n                        imageId: \"apple1641320065790\",\n                        total: 900\n                    },\n                    {\n                        name: \"ornage\",\n                        price: 100,\n                        quantity: 5,\n                        imageid: \"orange1641323221621\",\n                        total: 500,\n                    },\n\n                ],\n                address: {\n                    name: \"fahisAdmin\",\n                    number: 1234567890,\n                    city: \"vengara\",\n                    ladmark: \"main road\",\n\n                },\n                totalPrice: 800,\n                paymentID: \"aljseoiasjfieu930\",\n                OrderStatus: \"Picking\",\n\n            }\n        ],\n        error: '',\n        loding: false,\n    },\n    extraReducers: {\n        [fetchOrder.fulfilled]: (state, action) => {\n            state.loding = false\n            state.OrderInfo = action.payload.order\n\n        },\n        [fetchOrder.pending]: (state, action) => {\n            state.loding = true\n\n        },\n        [fetchOrder.rejected]: (state, action) => {\n            state.error = action.error\n            state.loding = false\n\n        }\n\n    }\n})\nexport default OrderSlice.reducer;"]},"metadata":{},"sourceType":"module"}