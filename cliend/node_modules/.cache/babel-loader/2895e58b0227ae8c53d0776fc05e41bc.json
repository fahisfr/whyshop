{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'https://frbots.com/';\nexport const ImagePath = imageId => `${baseURL}images/${imageId}.jpg`; // Response interceptor for API calls\n\n_c = ImagePath;\naxios.interceptors.response.use(response => {\n  // console.log('here is the response');\n  return response.data;\n}, async function (error) {\n  var _error$response;\n\n  console.log('here is the error');\n\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || (error === null || error === void 0 ? void 0 : error.error) === 'login_required') {}\n\n  return Promise.reject(error);\n});\nconst instance = axios.create({\n  baseURL: 'http://localhost:4000/api',\n  headers: {\n    'authorization': localStorage.getItem('accesstoken')\n  }\n});\nexport default instance;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePath\");","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Axios.js"],"names":["axios","baseURL","ImagePath","imageId","interceptors","response","use","data","error","console","log","status","Promise","reject","instance","create","headers","localStorage","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,qBAAhB;AAGA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAc,GAAEF,OAAQ,UAASE,OAAQ,MAA3D,C,CAEP;;KAFaD,S;AAGbF,KAAK,CAACI,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACID,QAAQ,IAAI;AACR;AACA,SAAOA,QAAQ,CAACE,IAAhB;AACH,CAJL,EAKI,gBAAgBC,KAAhB,EAAuB;AAAA;;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,MAAI,oBAAAF,KAAK,CAACH,QAAN,oEAAgBM,MAAhB,MAA2B,GAA3B,IAAkC,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEA,KAAP,MAAiB,gBAAvD,EAAyE,CAExE;;AACD,SAAOI,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACH,CAXL;AAeA,MAAMM,QAAQ,GAAGd,KAAK,CAACe,MAAN,CAAa;AAC1Bd,EAAAA,OAAO,EAAE,2BADiB;AAE1Be,EAAAA,OAAO,EAAE;AAAE,qBAAiBC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAnB;AAFiB,CAAb,CAAjB;AAIA,eAAeJ,QAAf","sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://frbots.com/';\n\n\nexport const ImagePath = (imageId) => `${baseURL}images/${imageId}.jpg`;\n\n// Response interceptor for API calls\naxios.interceptors.response.use(\n    response => {\n        // console.log('here is the response');\n        return response.data;\n    },\n    async function (error) {\n        console.log('here is the error');\n        if (error.response?.status === 401 || error?.error === 'login_required') {\n            \n        }\n        return Promise.reject(error);\n    }\n);\n\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:4000/api',\n    headers: { 'authorization': localStorage.getItem('accesstoken') }\n});\nexport default instance"]},"metadata":{},"sourceType":"module"}