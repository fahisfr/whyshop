{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http:';\nexport const ImagePath = imageId => `${baseURL}images/${imageId}.jpg`;\n_c = ImagePath;\nconst instance = axios.create({\n  baseURL: 'https://frbots.com/api',\n  headers: {\n    'authorization': localStorage.getItem('accesstoken')\n  }\n});\ninstance.interceptors.response.use(response => response, async error => {\n  if (error.response.status === 401 && error.response.data.message === 'token expired') {\n    try {\n      localStorage.removeItem('accesstoken');\n      const {\n        data\n      } = await instance.post('/refreshtoken', {\n        refreshtoken: localStorage.getItem('refreshtoken')\n      });\n      localStorage.setItem('accesstoken', data.accesstoken);\n    } catch (_error) {\n      return Promise.reject(error);\n    }\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePath\");","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Axios.js"],"names":["axios","baseURL","ImagePath","imageId","instance","create","headers","localStorage","getItem","interceptors","response","use","error","status","data","message","removeItem","post","refreshtoken","setItem","accesstoken","_error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,OAAO,GAAG,OAAhB;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAc,GAAEF,OAAQ,UAASE,OAAQ,MAA3D;KAAMD,S;AAEb,MAAME,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BJ,EAAAA,OAAO,EAAE,wBADiB;AAE1BK,EAAAA,OAAO,EAAE;AAAE,qBAAiBC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAnB;AAFiB,CAAb,CAAjB;AAIAJ,QAAQ,CAACK,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACID,QAAQ,IAAIA,QADhB,EAEI,MAAME,KAAN,IAAe;AAEX,MAAIA,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B,GAA1B,IAAiCD,KAAK,CAACF,QAAN,CAAeI,IAAf,CAAoBC,OAApB,KAAgC,eAArE,EAAsF;AAClF,QAAI;AACAR,MAAAA,YAAY,CAACS,UAAb,CAAwB,aAAxB;AACA,YAAM;AAAEF,QAAAA;AAAF,UAAW,MAAMV,QAAQ,CAACa,IAAT,CAAc,eAAd,EAA+B;AAAEC,QAAAA,YAAY,EAAEX,YAAY,CAACC,OAAb,CAAqB,cAArB;AAAhB,OAA/B,CAAvB;AACAD,MAAAA,YAAY,CAACY,OAAb,CAAqB,aAArB,EAAoCL,IAAI,CAACM,WAAzC;AAEH,KALD,CAKE,OAAOC,MAAP,EAAe;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeX,KAAf,CAAP;AACH;AACJ;;AACD,SAAOU,OAAO,CAACC,MAAR,CAAeX,KAAf,CAAP;AACH,CAfL;AAoBA,eAAeR,QAAf","sourcesContent":["import axios from 'axios';\n\n\nconst baseURL = 'http:';\n\nexport const ImagePath = (imageId) => `${baseURL}images/${imageId}.jpg`;\n\nconst instance = axios.create({\n    baseURL: 'https://frbots.com/api',\n    headers: { 'authorization': localStorage.getItem('accesstoken') }\n});\ninstance.interceptors.response.use(\n    response => response,\n    async error => {\n        \n        if (error.response.status === 401 && error.response.data.message === 'token expired') {\n            try {\n                localStorage.removeItem('accesstoken');\n                const { data } = await instance.post('/refreshtoken', { refreshtoken: localStorage.getItem('refreshtoken') });\n                localStorage.setItem('accesstoken', data.accesstoken);\n\n            } catch (_error) {\n                return Promise.reject(error)\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n\n\nexport default instance"]},"metadata":{},"sourceType":"module"}