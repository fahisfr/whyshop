{"ast":null,"code":"import _defineProperty from\"/home/frboy/whyshop/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"/home/frboy/whyshop/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _extraReducers;import _regeneratorRuntime from\"/home/frboy/whyshop/client/node_modules/@babel/runtime/regenerator/index.js\";import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import Axios from'../Axios';export var fetchProductTypes=createAsyncThunk('ProductTyes/fetchCart',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get('/home').then(function(res){return res.data;});case 2:response=_context.sent;return _context.abrupt(\"return\",response);case 4:case\"end\":return _context.stop();}}},_callee);})));export var ProductTypesrSlice=createSlice({name:'types',initialState:{typesInfo:[],error:'',loding:false},reducers:{SetProductTypes:function SetProductTypes(state,action){state.typesInfo=action.payload;}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,fetchProductTypes.fulfilled,function(state,action){state.loding=false;state.ProductTypesInfo=action.payload.types;}),_defineProperty(_extraReducers,fetchProductTypes.pending,function(state,action){state.loding=true;}),_defineProperty(_extraReducers,fetchProductTypes.rejected,function(state,action){state.error=action.error;state.loding=false;}),_extraReducers)});var SetProductTypes=ProductTypesrSlice.actions.SetProductTypes;export{SetProductTypes};export default ProductTypesrSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/client/src/Features/Categories.js"],"names":["createSlice","createAsyncThunk","Axios","fetchProductTypes","get","then","res","data","response","ProductTypesrSlice","name","initialState","typesInfo","error","loding","reducers","SetProductTypes","state","action","payload","extraReducers","fulfilled","ProductTypesInfo","types","pending","rejected","actions","reducer"],"mappings":"wWAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGF,gBAAgB,CAAC,uBAAD,sEAA0B,sKAChDC,CAAAA,KAAK,CAACE,GAAN,CAAU,OAAV,EAAmBC,IAAnB,CAAwB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAR,EAA3B,CADgD,QACjEC,QADiE,+CAEhEA,QAFgE,wDAA1B,GAA1C,CAIP,MAAO,IAAMC,CAAAA,kBAAkB,CAAGT,WAAW,CAAC,CAC1CU,IAAI,CAAE,OADoC,CAE1CC,YAAY,CAAE,CACVC,SAAS,CAAE,EADD,CAEVC,KAAK,CAAE,EAFG,CAGVC,MAAM,CAAE,KAHE,CAF4B,CAO1CC,QAAQ,CAAE,CACNC,eAAe,CAAE,yBAACC,KAAD,CAAQC,MAAR,CAAmB,CAChCD,KAAK,CAACL,SAAN,CAAkBM,MAAM,CAACC,OAAzB,CACH,CAHK,CAPgC,CAY1CC,aAAa,mDACRjB,iBAAiB,CAACkB,SADV,CACsB,SAACJ,KAAD,CAAQC,MAAR,CAAmB,CAC9CD,KAAK,CAACH,MAAN,CAAe,KAAf,CACAG,KAAK,CAACK,gBAAN,CAAyBJ,MAAM,CAACC,OAAP,CAAeI,KAAxC,CAEH,CALQ,iCAMRpB,iBAAiB,CAACqB,OANV,CAMoB,SAACP,KAAD,CAAQC,MAAR,CAAmB,CAC5CD,KAAK,CAACH,MAAN,CAAe,IAAf,CAEH,CATQ,iCAURX,iBAAiB,CAACsB,QAVV,CAUqB,SAACR,KAAD,CAAQC,MAAR,CAAmB,CAC7CD,KAAK,CAACJ,KAAN,CAAcK,MAAM,CAACL,KAArB,CACAI,KAAK,CAACH,MAAN,CAAe,KAAf,CAEH,CAdQ,iBAZ6B,CAAD,CAAtC,CA8BA,GAAQE,CAAAA,eAAR,CAA4BP,kBAAkB,CAACiB,OAA/C,CAAQV,eAAR,C,wBACP,cAAeP,CAAAA,kBAAkB,CAACkB,OAAlC","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\nexport const fetchProductTypes = createAsyncThunk('ProductTyes/fetchCart', async () => {\n    const response = await Axios.get('/home').then(res => res.data)\n    return response\n})\nexport const ProductTypesrSlice = createSlice({\n    name: 'types',\n    initialState: {\n        typesInfo: [],\n        error: '',\n        loding: false,\n    },\n    reducers: {\n        SetProductTypes: (state, action) => {\n            state.typesInfo = action.payload;\n        }\n    },\n    extraReducers: {\n        [fetchProductTypes.fulfilled]: (state, action) => {\n            state.loding = false\n            state.ProductTypesInfo = action.payload.types\n\n        },\n        [fetchProductTypes.pending]: (state, action) => {\n            state.loding = true\n\n        },\n        [fetchProductTypes.rejected]: (state, action) => {\n            state.error = action.error\n            state.loding = false\n\n        }\n\n    }\n})\nexport const { SetProductTypes } = ProductTypesrSlice.actions\nexport default ProductTypesrSlice.reducer;"]},"metadata":{},"sourceType":"module"}