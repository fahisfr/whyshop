{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport Axios from '../Axios';\nexport const fetchCart = createAsyncThunk('Order/fetchCart', async () => {\n  const response = await Axios.get('/order').then(res => res.data);\n  console;\n  return response;\n});\nexport const CartSlice = createSlice({\n  name: 'order',\n  initialState: {\n    paymentType: '',\n    paymentStatus: '',\n    products: [],\n    address: [],\n    totle: 0,\n    orderAt: ''\n  },\n  reducers: {\n    addToCart: (state, action) => {}\n  },\n  extraReducers: {\n    [fetchCart.fulfilled]: (state, action) => {\n      state.paymentType = action.payload.paymentType;\n      state.paymentStatus = action.payload.paymentStatus;\n      state.products = action.payload.products;\n      state.address = action.payload.address;\n      state.totle = action.payload.totle;\n      state.orderAt = action.payload.orderAt;\n      console.log(action.payload);\n    }\n  }\n});\nexport default CartSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Features/Order.js"],"names":["createSlice","createAsyncThunk","Axios","fetchCart","response","get","then","res","data","console","CartSlice","name","initialState","paymentType","paymentStatus","products","address","totle","orderAt","reducers","addToCart","state","action","extraReducers","fulfilled","payload","log","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAIA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AACrE,QAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,QAAV,EAAoBC,IAApB,CAAyBC,GAAG,IAAIA,GAAG,CAACC,IAApC,CAAvB;AACAC,EAAAA,OAAO;AACP,SAAOL,QAAP;AACH,CAJwC,CAAlC;AAKP,OAAO,MAAMM,SAAS,GAAGV,WAAW,CAAC;AACjCW,EAAAA,IAAI,EAAE,OAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE,EADH;AAEVC,IAAAA,aAAa,EAAE,EAFL;AAGVC,IAAAA,QAAQ,EAAE,EAHA;AAIVC,IAAAA,OAAO,EAAE,EAJC;AAKVC,IAAAA,KAAK,EAAC,CALI;AAMVC,IAAAA,OAAO,EAAC;AANE,GAFmB;AAWjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAC7B;AAFK,GAXuB;AAejCC,EAAAA,aAAa,EAAE;AACX,KAACpB,SAAS,CAACqB,SAAX,GAAuB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACG,OAAP,CAAeZ,WAAnC;AACAQ,MAAAA,KAAK,CAACP,aAAN,GAAsBQ,MAAM,CAACG,OAAP,CAAeX,aAArC;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACG,OAAP,CAAeV,QAAhC;AACAM,MAAAA,KAAK,CAACL,OAAN,GAAgBM,MAAM,CAACG,OAAP,CAAeT,OAA/B;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACG,OAAP,CAAeR,KAA7B;AACAI,MAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACG,OAAP,CAAeP,OAA/B;AACAT,MAAAA,OAAO,CAACiB,GAAR,CAAYJ,MAAM,CAACG,OAAnB;AACH;AATU;AAfkB,CAAD,CAA7B;AA2BP,eAAef,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\n\n\nexport const fetchCart = createAsyncThunk('Order/fetchCart', async () => {\n    const response = await Axios.get('/order').then(res => res.data)\n    console\n    return response\n})\nexport const CartSlice = createSlice({\n    name: 'order',\n    initialState: {\n        paymentType: '',\n        paymentStatus: '',\n        products: [],\n        address: [],\n        totle:0,\n        orderAt:'',\n        \n    },\n    reducers: {\n        addToCart: (state, action) => {\n        }\n    },\n    extraReducers: {\n        [fetchCart.fulfilled]: (state, action) => {\n            state.paymentType = action.payload.paymentType\n            state.paymentStatus = action.payload.paymentStatus\n            state.products = action.payload.products\n            state.address = action.payload.address\n            state.totle = action.payload.totle\n            state.orderAt = action.payload.orderAt\n            console.log(action.payload)\n        }\n    }\n})\nexport default CartSlice.reducer;"]},"metadata":{},"sourceType":"module"}