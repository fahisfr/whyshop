{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport Axios from '../Axios';\nexport const fetchCart = createAsyncThunk('cart/fetchCart', async () => {\n  const response = await Axios.get('/cart').then(res => res.data);\n  return response;\n});\nexport const CartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cartInfo: [],\n    error: '',\n    total: 0\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      console.log(action.payload);\n      state.cartInfo.push(action.payload);\n    },\n    changeProductQuantity: (state, action) => {\n      action.payload.quantity === .5 ? state.total += action.payload.price : state.total -= action.payload.price;\n      state.cartInfo.find(itme => itme._id === action.payload.id).quantity += action.payload.quantity;\n    },\n    removeFromCart: (state, action) => {\n      state.cartInfo = state.cartInfo.filter(item => item._id !== action.payload);\n    },\n    removeAllProducts: (state, action) => {\n      state.cartInfo = [];\n    },\n    checkout: (state, action) => {\n      state.cartInfo = [];\n    }\n  },\n  extraReducers: {\n    [fetchCart.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [fetchCart.fulfilled]: (state, action) => {\n      state.cartInfo = action.payload.cart;\n      state.total = action.payload.totalamout;\n      state.totle = action.payload.totleamout;\n      state.loading = false;\n    },\n    [fetchCart.rejected]: (state, action) => {\n      state.error = action.error;\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  addToCart,\n  changeProductQuantity,\n  removeFromCart,\n  removeAllProducts\n} = CartSlice.actions;\nexport default CartSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Features/Cart.js"],"names":["createSlice","createAsyncThunk","Axios","fetchCart","response","get","then","res","data","CartSlice","name","initialState","cartInfo","error","total","reducers","addToCart","state","action","console","log","payload","push","changeProductQuantity","quantity","price","find","itme","_id","id","removeFromCart","filter","item","removeAllProducts","checkout","extraReducers","pending","loading","fulfilled","cart","totalamout","totle","totleamout","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\n\n\nexport const fetchCart = createAsyncThunk('cart/fetchCart', async () => {\n    const response = await Axios.get('/cart').then(res => res.data)\n    return response\n}\n)\nexport const CartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        cartInfo: [],\n        error: '',\n        total: 0,\n    },\n    reducers: {\n        addToCart: (state, action) => {\n            console.log(action.payload)\n            state.cartInfo.push(action.payload)\n        },\n        changeProductQuantity: (state, action) => {\n            action.payload.quantity === .5 ? state.total += action.payload.price : state.total -= action.payload.price\n            state.cartInfo.find(itme => itme._id === action.payload.id).quantity += action.payload.quantity\n        },\n        removeFromCart: (state, action) => {\n            state.cartInfo = state.cartInfo.filter(item => item._id !== action.payload)\n        },\n        removeAllProducts: (state, action) => {\n            state.cartInfo = []\n        },\n        checkout: (state, action) => {\n            state.cartInfo = []\n        }\n    },\n    extraReducers: {\n        [fetchCart.pending]: (state, action) => {\n            state.loading = true\n        }\n        ,\n        [fetchCart.fulfilled]: (state, action) => {\n            state.cartInfo = action.payload.cart\n            state.total = action.payload.totalamout\n            state.totle = action.payload.totleamout\n            state.loading = false\n        }\n        ,\n        [fetchCart.rejected]: (state, action) => {\n            state.error = action.error\n            state.loading = false\n        }\n    }\n})\nexport const { addToCart, changeProductQuantity, removeFromCart, removeAllProducts } = CartSlice.actions;\nexport default CartSlice.reducer;"]},"metadata":{},"sourceType":"module"}