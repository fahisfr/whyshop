{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:4000/';\nexport const ImagePath = imageId => `${baseURL}images/${imageId}.jpg`;\n_c = ImagePath;\nconst instance = axios.create({\n  baseURL: 'http://localhost:4000/api',\n  headers: {\n    'authorization': localStorage.getItem('accesstoken')\n  }\n});\nconsole.log(localStorage.getItem('accesstoken'));\ninstance.interceptors.response.use(response => response, async error => {\n  if (error.response.status === 401 && error.response.data.message === 'Token not valid') {\n    try {\n      const {\n        data\n      } = await instance.put('/auth/refreshtoken');\n      localStorage.setItem('accesstoken', data.accesstoken);\n      window.location.reload('/');\n    } catch (_error) {\n      return Promise.reject(error);\n    }\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePath\");","map":{"version":3,"sources":["/home/frboy/whyshop/client/src/Axios.js"],"names":["axios","baseURL","ImagePath","imageId","instance","create","headers","localStorage","getItem","console","log","interceptors","response","use","error","status","data","message","put","setItem","accesstoken","window","location","reload","_error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAc,GAAEF,OAAQ,UAASE,OAAQ,MAA3D;KAAMD,S;AAEb,MAAME,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BJ,EAAAA,OAAO,EAAE,2BADiB;AAE1BK,EAAAA,OAAO,EAAE;AACL,qBAAiBC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADZ;AAFiB,CAAb,CAAjB;AAOAC,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;AACAJ,QAAQ,CAACO,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACID,QAAQ,IAAIA,QADhB,EAEI,MAAME,KAAN,IAAe;AACX,MAAIA,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B,GAA1B,IAAiCD,KAAK,CAACF,QAAN,CAAeI,IAAf,CAAoBC,OAApB,KAAgC,iBAArE,EAAwF;AACpF,QAAI;AACA,YAAM;AAAED,QAAAA;AAAF,UAAW,MAAMZ,QAAQ,CAACc,GAAT,CAAa,oBAAb,CAAvB;AACAX,MAAAA,YAAY,CAACY,OAAb,CAAqB,aAArB,EAAoCH,IAAI,CAACI,WAAzC;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;AACH,KAJD,CAIE,OAAOC,MAAP,EAAe;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeZ,KAAf,CAAP;AACH;AACJ;;AACD,SAAOW,OAAO,CAACC,MAAR,CAAeZ,KAAf,CAAP;AACH,CAbL;AAkBA,eAAeV,QAAf","sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'http://localhost:4000/';\n\nexport const ImagePath = (imageId) => `${baseURL}images/${imageId}.jpg`;\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:4000/api',\n    headers: {\n        'authorization': localStorage.getItem('accesstoken'),\n        \n    },\n});\nconsole.log(localStorage.getItem('accesstoken'))\ninstance.interceptors.response.use(\n    response => response,\n    async error => {\n        if (error.response.status === 401 && error.response.data.message === 'Token not valid') {\n            try {\n                const { data } = await instance.put('/auth/refreshtoken')\n                localStorage.setItem('accesstoken', data.accesstoken)\n                window.location.reload('/')\n            } catch (_error) {\n                return Promise.reject(error)\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n\n\nexport default instance"]},"metadata":{},"sourceType":"module"}