{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport Axios from '../Axios';\nexport const fetchOrder = createAsyncThunk('Order/fetchCart', async () => {\n  const response = await Axios.get('/order').then(res => res.data.order);\n  return response;\n});\nexport const OrderSlice = createSlice({\n  name: 'order',\n  initialState: {\n    OrderInfo: []\n  },\n  reducers: {\n    addToCart: (state, action) => {}\n  },\n  extraReducers: {\n    [fetchOrder.fulfilled]: (state, action) => {\n      state.OrderInfo = action.payload;\n    }\n  }\n});\nexport default OrderSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Features/Order.js"],"names":["createSlice","createAsyncThunk","Axios","fetchOrder","response","get","then","res","data","order","OrderSlice","name","initialState","OrderInfo","reducers","addToCart","state","action","extraReducers","fulfilled","payload","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAIA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AACtE,QAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,QAAV,EAAoBC,IAApB,CAAyBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,KAAzC,CAAvB;AACA,SAAOL,QAAP;AACH,CAHyC,CAAnC;AAIP,OAAO,MAAMM,UAAU,GAAGV,WAAW,CAAC;AAClCW,EAAAA,IAAI,EAAE,OAD4B;AAElCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAC;AADA,GAFoB;AAMlCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAC7B;AAFK,GANwB;AAUlCC,EAAAA,aAAa,EAAE;AACX,KAACf,UAAU,CAACgB,SAAZ,GAAwB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACH,SAAN,GAAgBI,MAAM,CAACG,OAAvB;AAEH;AAJU;AAVmB,CAAD,CAA9B;AAiBP,eAAeV,UAAU,CAACW,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\n\n\nexport const fetchOrder = createAsyncThunk('Order/fetchCart', async () => {\n    const response = await Axios.get('/order').then(res => res.data.order)\n    return response\n})\nexport const OrderSlice = createSlice({\n    name: 'order',\n    initialState: {\n        OrderInfo:[]\n        \n    },\n    reducers: {\n        addToCart: (state, action) => {\n        }\n    },\n    extraReducers: {\n        [fetchOrder.fulfilled]: (state, action) => {\n            state.OrderInfo=action.payload\n\n        }\n    }\n})\nexport default OrderSlice.reducer;"]},"metadata":{},"sourceType":"module"}