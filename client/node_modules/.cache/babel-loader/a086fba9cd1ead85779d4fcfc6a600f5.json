{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:4000/';\nexport const ImagePath = imageId => `${baseURL}images/${imageId}.jpg`;\n_c = ImagePath;\nconst instance = axios.create({\n  baseURL: 'http://localhost:4000/api',\n  headers: {\n    'Content-Type': 'application/json',\n    \"authorization\": localStorage.getItem('accesstoken') ? `${localStorage.getItem('accesstoken')}` : ''\n  }\n});\ninstance.interceptors.request.use(confi);\ninstance.interceptors.response.use(response => response, async error => {\n  var _error$response;\n\n  const lastrequest = error.config;\n\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403) {\n    const {\n      data\n    } = await instance.put('/auth/refreshtoken');\n    localStorage.setItem('accesstoken', data.accesstoken);\n    window.location.reload();\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePath\");","map":{"version":3,"sources":["/home/frboy/whyshop/client/src/Axios.js"],"names":["axios","baseURL","ImagePath","imageId","instance","create","headers","localStorage","getItem","interceptors","request","use","confi","response","error","lastrequest","config","status","data","put","setItem","accesstoken","window","location","reload","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAc,GAAEF,OAAQ,UAASE,OAAQ,MAA3D;KAAMD,S;AAEb,MAAME,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BJ,EAAAA,OAAO,EAAE,2BADiB;AAE1BK,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX;AAEL,qBAAiBC,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAsC,GAAED,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC,EAA5E,GAAgF;AAF5F;AAFiB,CAAb,CAAjB;AAQAJ,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCC,KAAlC;AAEAR,QAAQ,CAACK,YAAT,CAAsBI,QAAtB,CAA+BF,GAA/B,CACIE,QAAQ,IAAIA,QADhB,EAEI,MAAMC,KAAN,IAAe;AAAA;;AACX,QAAMC,WAAW,GAAGD,KAAK,CAACE,MAA1B;;AACA,MAAI,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAED,QAAP,oEAAiBI,MAAjB,MAA4B,GAAhC,EAAqC;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,QAAQ,CAACe,GAAT,CAAa,oBAAb,CAAvB;AACAZ,IAAAA,YAAY,CAACa,OAAb,CAAqB,aAArB,EAAoCF,IAAI,CAACG,WAAzC;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeZ,KAAf,CAAP;AACH,CAVL;AAeA,eAAeV,QAAf","sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'http://localhost:4000/';\n\nexport const ImagePath = (imageId) => `${baseURL}images/${imageId}.jpg`;\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:4000/api',\n    headers: {\n        'Content-Type': 'application/json',\n        \"authorization\": localStorage.getItem('accesstoken')? `${localStorage.getItem('accesstoken')}` : '',\n    }\n});\n\ninstance.interceptors.request.use(confi)\n\ninstance.interceptors.response.use(\n    response => response,\n    async error => {\n        const lastrequest = error.config;\n        if (error?.response?.status === 403) {\n            const { data } = await instance.put('/auth/refreshtoken')\n            localStorage.setItem('accesstoken', data.accesstoken)\n            window.location.reload()\n        }\n        return Promise.reject(error);\n    }\n);\n\n\n\nexport default instance"]},"metadata":{},"sourceType":"module"}