{"ast":null,"code":"import _regeneratorRuntime from\"/home/frboy/whyshop/cliend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/frboy/whyshop/cliend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var baseURL='https://frbots.com/';export var ImagePath=function ImagePath(imageId){return\"\".concat(baseURL,\"images/\").concat(imageId,\".jpg\");};var instance=axios.create({baseURL:'https://frbots.com/api/',headers:{'authorization':localStorage.getItem('accesstoken')}});instance.interceptors.response.use(function(response){return response;},/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(error){var _yield$instance$put,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(error.response.status===401&&error.response.data.message==='Token not valid')){_context.next=13;break;}_context.prev=1;_context.next=4;return instance.put('/auth/refreshtoken');case 4:_yield$instance$put=_context.sent;data=_yield$instance$put.data;localStorage.setItem('accesstoken',data.accesstoken);window.location.reload('/');_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",Promise.reject(error));case 13:return _context.abrupt(\"return\",Promise.reject(error));case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function(_x){return _ref.apply(this,arguments);};}());export default instance;","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Axios.js"],"names":["axios","baseURL","ImagePath","imageId","instance","create","headers","localStorage","getItem","interceptors","response","use","error","status","data","message","put","setItem","accesstoken","window","location","reload","Promise","reject"],"mappings":"+RAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,OAAO,CAAG,qBAAhB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,OAAD,kBAAgBF,OAAhB,mBAAiCE,OAAjC,UAAlB,CAEP,GAAMC,CAAAA,QAAQ,CAAGJ,KAAK,CAACK,MAAN,CAAa,CAC1BJ,OAAO,CAAE,yBADiB,CAE1BK,OAAO,CAAE,CACL,gBAAiBC,YAAY,CAACC,OAAb,CAAqB,aAArB,CADZ,CAFiB,CAAb,CAAjB,CAMAJ,QAAQ,CAACK,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACI,SAAAD,QAAQ,QAAIA,CAAAA,QAAJ,EADZ,0FAEI,iBAAME,KAAN,oJACQA,KAAK,CAACF,QAAN,CAAeG,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACF,QAAN,CAAeI,IAAf,CAAoBC,OAApB,GAAgC,iBADzE,iEAGmCX,CAAAA,QAAQ,CAACY,GAAT,CAAa,oBAAb,CAHnC,0CAGoBF,IAHpB,qBAGoBA,IAHpB,CAIYP,YAAY,CAACU,OAAb,CAAqB,aAArB,CAAoCH,IAAI,CAACI,WAAzC,EACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB,EALZ,iHAOmBC,OAAO,CAACC,MAAR,CAAeX,KAAf,CAPnB,0CAUWU,OAAO,CAACC,MAAR,CAAeX,KAAf,CAVX,uEAFJ,gEAkBA,cAAeR,CAAAA,QAAf","sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://frbots.com/';\n\nexport const ImagePath = (imageId) => `${baseURL}images/${imageId}.jpg`;\n\nconst instance = axios.create({\n    baseURL: 'https://frbots.com/api/',\n    headers: {\n        'authorization': localStorage.getItem('accesstoken'),\n    },\n});\ninstance.interceptors.response.use(\n    response => response,\n    async error => {\n        if (error.response.status === 401 && error.response.data.message === 'Token not valid') {\n            try {\n                const { data } = await instance.put('/auth/refreshtoken')\n                localStorage.setItem('accesstoken', data.accesstoken)\n                window.location.reload('/')\n            } catch (_error) {\n                return Promise.reject(error)\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n\n\nexport default instance"]},"metadata":{},"sourceType":"module"}