{"ast":null,"code":"import _defineProperty from\"/home/frboy/whyshop/cliend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/frboy/whyshop/cliend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/frboy/whyshop/cliend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import Axios from'../Axios';export var fetchCart=createAsyncThunk('cart/fetchCart',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get('/cart').then(function(res){return res.data;});case 2:response=_context.sent;return _context.abrupt(\"return\",response);case 4:case\"end\":return _context.stop();}}},_callee);})));export var CartSlice=createSlice({name:'cart',initialState:{cartInfo:[],error:'',total:0},reducers:{addToCart:function addToCart(state,action){console.log(action.payload);state.cartInfo.push(action.payload);},changeProductQuantity:function changeProductQuantity(state,action){console.log(\"redux\",action.payload);state.cartInfo.find(function(itme){return itme._id===action.payload.id;}).quantity+=action.payload.quantity;},removeFromCart:function removeFromCart(state,action){state.cartInfo.splice(state.cartInfo.findIndex(function(itme){return itme.id===action.payload.id;}),1);},removeAllProducts:function removeAllProducts(state,action){state.cartInfo=[];}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,fetchCart.pending,function(state,action){state.loading=true;}),_defineProperty(_extraReducers,fetchCart.fulfilled,function(state,action){state.cartInfo=action.payload.cart;state.totle=action.payload.totleamout;state.loading=false;}),_defineProperty(_extraReducers,fetchCart.rejected,function(state,action){state.error=action.error;state.loading=false;}),_extraReducers)});var _CartSlice$actions=CartSlice.actions,addToCart=_CartSlice$actions.addToCart,changeProductQuantity=_CartSlice$actions.changeProductQuantity,removeFromCart=_CartSlice$actions.removeFromCart,removeAllProducts=_CartSlice$actions.removeAllProducts;export{addToCart,changeProductQuantity,removeFromCart,removeAllProducts};export default CartSlice.reducer;","map":{"version":3,"sources":["/home/frboy/whyshop/cliend/src/Features/Cart.js"],"names":["createSlice","createAsyncThunk","Axios","fetchCart","get","then","res","data","response","CartSlice","name","initialState","cartInfo","error","total","reducers","addToCart","state","action","console","log","payload","push","changeProductQuantity","find","itme","_id","id","quantity","removeFromCart","splice","findIndex","removeAllProducts","extraReducers","pending","loading","fulfilled","cart","totle","totleamout","rejected","actions","reducer"],"mappings":"qcAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAIA,MAAO,IAAMC,CAAAA,SAAS,CAAGF,gBAAgB,CAAC,gBAAD,sEAAmB,sKACjCC,CAAAA,KAAK,CAACE,GAAN,CAAU,OAAV,EAAmBC,IAAnB,CAAwB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAR,EAA3B,CADiC,QAClDC,QADkD,+CAEjDA,QAFiD,wDAAnB,GAAlC,CAKP,MAAO,IAAMC,CAAAA,SAAS,CAAGT,WAAW,CAAC,CACjCU,IAAI,CAAE,MAD2B,CAEjCC,YAAY,CAAE,CACVC,QAAQ,CAAE,EADA,CAEVC,KAAK,CAAC,EAFI,CAGVC,KAAK,CAAC,CAHI,CAFmB,CAOjCC,QAAQ,CAAE,CACNC,SAAS,CAAE,mBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1BC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB,EACAJ,KAAK,CAACL,QAAN,CAAeU,IAAf,CAAoBJ,MAAM,CAACG,OAA3B,EACH,CAJK,CAKNE,qBAAqB,CAAE,+BAACN,KAAD,CAAQC,MAAR,CAAmB,CACtCC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAoBF,MAAM,CAACG,OAA3B,EACAJ,KAAK,CAACL,QAAN,CAAeY,IAAf,CAAoB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaR,MAAM,CAACG,OAAP,CAAeM,EAAhC,EAAxB,EAA4DC,QAA5D,EAAwEV,MAAM,CAACG,OAAP,CAAeO,QAAvF,CACH,CARK,CASNC,cAAc,CAAE,wBAACZ,KAAD,CAAQC,MAAR,CAAmB,CAC/BD,KAAK,CAACL,QAAN,CAAekB,MAAf,CAAsBb,KAAK,CAACL,QAAN,CAAemB,SAAf,CAAyB,SAAAN,IAAI,QAAGA,CAAAA,IAAI,CAACE,EAAL,GAAUT,MAAM,CAACG,OAAP,CAAeM,EAA5B,EAA7B,CAAtB,CAAmF,CAAnF,EACH,CAXK,CAYNK,iBAAiB,CAAE,2BAACf,KAAD,CAAQC,MAAR,CAAmB,CAClCD,KAAK,CAACL,QAAN,CAAiB,EAAjB,CACH,CAdK,CAPuB,CAuBjCqB,aAAa,mDACR9B,SAAS,CAAC+B,OADF,CACY,SAACjB,KAAD,CAAQC,MAAR,CAAmB,CACpCD,KAAK,CAACkB,OAAN,CAAgB,IAAhB,CACH,CAHQ,iCAKRhC,SAAS,CAACiC,SALF,CAKc,SAACnB,KAAD,CAAQC,MAAR,CAAmB,CACtCD,KAAK,CAACL,QAAN,CAAiBM,MAAM,CAACG,OAAP,CAAegB,IAAhC,CACApB,KAAK,CAACqB,KAAN,CAAYpB,MAAM,CAACG,OAAP,CAAekB,UAA3B,CACAtB,KAAK,CAACkB,OAAN,CAAgB,KAAhB,CACH,CATQ,iCAWRhC,SAAS,CAACqC,QAXF,CAWa,SAACvB,KAAD,CAAQC,MAAR,CAAmB,CACrCD,KAAK,CAACJ,KAAN,CAAcK,MAAM,CAACL,KAArB,CACAI,KAAK,CAACkB,OAAN,CAAgB,KAAhB,CACH,CAdQ,iBAvBoB,CAAD,CAA7B,C,uBAwC4E1B,SAAS,CAACgC,O,CAA9EzB,S,oBAAAA,S,CAAUO,qB,oBAAAA,qB,CAAsBM,c,oBAAAA,c,CAAeG,iB,oBAAAA,iB,0EAC9D,cAAevB,CAAAA,SAAS,CAACiC,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport Axios from '../Axios'\n\n\n\nexport const fetchCart = createAsyncThunk('cart/fetchCart', async () => {\n    const response = await Axios.get('/cart').then(res => res.data)\n    return response\n}\n)\nexport const CartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        cartInfo: [],\n        error:'',\n        total:0,\n    },\n    reducers: {\n        addToCart: (state, action) => {\n            console.log(action.payload)\n            state.cartInfo.push(action.payload)\n        },\n        changeProductQuantity: (state, action) => {\n            console.log(\"redux\",action.payload)\n            state.cartInfo.find(itme => itme._id === action.payload.id).quantity += action.payload.quantity\n        },\n        removeFromCart: (state, action) => {\n            state.cartInfo.splice(state.cartInfo.findIndex(itme=> itme.id===action.payload.id),1)\n        },\n        removeAllProducts: (state, action) => {\n            state.cartInfo = []\n        },\n    },\n    extraReducers: {\n        [fetchCart.pending]: (state, action) => {\n            state.loading = true\n        }\n        ,\n        [fetchCart.fulfilled]: (state, action) => {\n            state.cartInfo = action.payload.cart\n            state.totle=action.payload.totleamout\n            state.loading = false\n        }\n        ,\n        [fetchCart.rejected]: (state, action) => {\n            state.error = action.error\n            state.loading = false\n        }\n    }\n})\nexport const { addToCart,changeProductQuantity,removeFromCart,removeAllProducts} = CartSlice.actions;\nexport default CartSlice.reducer;"]},"metadata":{},"sourceType":"module"}